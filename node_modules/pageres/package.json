{
  "name": "pageres",
  "version": "0.2.3",
  "description": "Get screenshots of websites in different resolutions",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/pageres"
  },
  "bin": {
    "pageres": "cli.js"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha --timeout 0"
  },
  "files": [
    "index.js",
    "cli.js"
  ],
  "keywords": [
    "page",
    "website",
    "site",
    "web",
    "url",
    "resolution",
    "size",
    "screenshot",
    "screen",
    "responsive",
    "cli"
  ],
  "dependencies": {
    "each-async": "~0.1.2",
    "chalk": "~0.4.0",
    "nopt": "~2.1.2",
    "webshot": "~0.10.0",
    "slugify-url": "~1.0.1",
    "sudo-block": "~0.3.0",
    "lodash": "~2.4.1",
    "get-stdin": "~0.1.0"
  },
  "devDependencies": {
    "mocha": "*",
    "rimraf": "~2.2.6"
  },
  "readme": "# <img src=\"logo.png\" width=\"500\" alt=\"pageres\">\n\n> Get screenshots of the websites in different resolutions\n\n[![Build Status](https://travis-ci.org/sindresorhus/pageres.png?branch=master)](https://travis-ci.org/sindresorhus/pageres)\n\nA good way to make sure your websites are responsive.\n\nIt's speedy and generates 100 screenshots from 10 different websites in just over a minute.\n\n![](screenshot.png)\n\n![](screenshot-output.png)\n\n\n## CLI app\n\n### Install\n\n```\nnpm install --global pageres\n```\n\n*PhantomJS, which is used for generating the screenshots, is installed automagically, but in some [rare cases](https://github.com/Obvious/phantomjs/issues/102) it might fail to and you'll get an `Error: spawn EACCES` error. [Download](http://phantomjs.org/download.html) PhantomJS manually and reinstall pageres if that happens.*\n\n\n### Usage\n\n```\n$ pageres --help\n\nGet screenshots of websites in different resolutions.\n\nSpecify urls and screen resolutions as arguments. Order doesn't matter.\n\nUsage\n  pageres <url> <resolution> [<resolution> <url> ...]\n  pageres [<url> <resolution> ...] < <file>\n  cat <file> | pageres [<url> <resolution> ...]\n\nExample\n  pageres todomvc.com yeoman.io 1366x768 1600x900\n  pageres 1366x768 < urls.txt\n  cat screen-resolutions.txt | pageres todomvc.com yeoman.io\n\nYou can also pipe in a newline separated list of urls and screen resolutions which will get merged with the arguments.\nIf no screen resolutions are specified it will fall back to the ten most popular ones according to w3counter.\n```\n\n\n## Programmatic API\n\n### Install\n\n```\nnpm install --save pageres\n```\n\n### Example\n\n```js\nvar pageres = require('pageres');\n\npageres(['todomvc.com'], ['1366x768', '1600x900'], function () {\n\tconsole.log('done');\n});\n```\n\n\n## Google Analytics screen resolutions\n\nYou can use the most popular resolutions for your site with `pageres` by following these steps:\n\n- In Google Analytics go to the site for which you want screen resolutions\n- Select `Audience` => `Technology` => `Browser & OS`\n- Click the `Screen Resolution` link in the middle of the screen\n- Click the `Export` button at the top, then `Google Spreadsheets`, and select yes for importing\n- Select all the resolutions and copy them into a new file and save it\n- In your terminal run: `pageres website.com < file-from-above-step.txt`\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/pageres/issues"
  },
  "homepage": "https://github.com/sindresorhus/pageres",
  "_id": "pageres@0.2.3",
  "_from": "pageres@*"
}
